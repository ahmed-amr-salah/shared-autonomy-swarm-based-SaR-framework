# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QtApp.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from QT import ui_functions as uiFunction


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1134, 639)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 500))
        MainWindow.setStyleSheet("background-color: rgb(45, 45, 45);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Top_Bar = QtWidgets.QFrame(self.centralwidget)
        self.Top_Bar.setMaximumSize(QtCore.QSize(16777215, 40))
        self.Top_Bar.setStyleSheet("background-color: rgb(35, 35, 35);")
        self.Top_Bar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Top_Bar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Top_Bar.setObjectName("Top_Bar")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Top_Bar)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_toggle = QtWidgets.QFrame(self.Top_Bar)
        self.frame_toggle.setMaximumSize(QtCore.QSize(70, 40))
        self.frame_toggle.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.frame_toggle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_toggle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_toggle.setObjectName("frame_toggle")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_toggle)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout.addWidget(self.frame_toggle)
        self.frame_top = QtWidgets.QFrame(self.Top_Bar)
        self.frame_top.setStyleSheet("color:rgb(255,255,255);\n"
                                     "background-color: rgb(225, 78, 202);")
        self.frame_top.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_top.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_top.setObjectName("frame_top")
        self.horizontalLayout.addWidget(self.frame_top)
        self.verticalLayout.addWidget(self.Top_Bar)
        self.Content = QtWidgets.QFrame(self.centralwidget)
        self.Content.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Content.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Content.setObjectName("Content")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Content)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_left_menu = QtWidgets.QFrame(self.Content)
        self.frame_left_menu.setMinimumSize(QtCore.QSize(70, 0))
        self.frame_left_menu.setMaximumSize(QtCore.QSize(70, 16777215))
        self.frame_left_menu.setStyleSheet("color:rgb(255,255,255);\n"
                                           "background-color: rgb(225, 78, 202);")
        self.frame_left_menu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_left_menu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_left_menu.setObjectName("frame_left_menu")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_left_menu)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_top_menus = QtWidgets.QFrame(self.frame_left_menu)
        self.frame_top_menus.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_top_menus.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_top_menus.setObjectName("frame_top_menus")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_top_menus)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_3.addWidget(self.frame_top_menus, 0, QtCore.Qt.AlignTop)
        self.horizontalLayout_2.addWidget(self.frame_left_menu)
        self.frame_pages = QtWidgets.QFrame(self.Content)
        self.frame_pages.setStyleSheet("background-color: rgb(30, 30, 47);")
        self.frame_pages.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_pages.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_pages.setObjectName("frame_pages")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_pages)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_pages)
        self.stackedWidget.setStyleSheet("background-color: rgb(30, 30, 47);")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_1 = QtWidgets.QWidget()
        self.page_1.setObjectName("page_1")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.page_1)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_2 = QtWidgets.QFrame(self.page_1)
        self.frame_2.setStyleSheet("background-color: rgb(30, 30, 47);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(370, 60, 351, 51))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet(("""QLabel {
                                        color:rgb(255,255,255);

                               		    font-size: 50px;
                               		     font-weight: 700;
                               	}
                                           """))
        self.label_7.setScaledContents(True)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.frame_2)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(40, 150, 961, 241))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_8 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.label_8.setMaximumSize(QtCore.QSize(100, 80))
        self.label_8.setText("")
        self.label_8.setStyleSheet(("""QLabel {
                            		   image: url(graph.png);
                                            }
                                       QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }
                                        """))
        self.label_8.setScaledContents(True)
        self.label_8.setWordWrap(False)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_4.addWidget(self.label_8)
        self.label_9 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.label_9.setMaximumSize(QtCore.QSize(100, 80))
        self.label_9.setText("")
        self.label_9.setStyleSheet(("""QLabel {
                            		   image: url(anomaly2.png);
                                            }
                                       QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }
                                        """))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_4.addWidget(self.label_9)
        self.label_10 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.label_10.setMaximumSize(QtCore.QSize(100, 80))
        self.label_10.setText("")
        self.label_10.setStyleSheet(("""QLabel {
                            		   image: url(classify.png);
                                            }
                                       QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }

                                        """))
        self.label_10.setScaledContents(True)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_4.addWidget(self.label_10)
        self.VisualizationCheckbox = QtWidgets.QCheckBox(self.frame_2)
        self.VisualizationCheckbox.setGeometry(QtCore.QRect(190, 340, 166, 22))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.VisualizationCheckbox.setFont(font)
        self.VisualizationCheckbox.setAutoFillBackground(False)
        self.VisualizationCheckbox.setStyleSheet("""
                                QCheckBox{
                                color:white;

                                }
                              QCheckBox::indicator:unchecked {
                               image: url( OffSwitch.png);
                                   width:40px;
                                   height:40px;
                                    margin-top:0.5%;
                              }
                               QCheckBox::indicator:checked {
                               image: url( OnSwitch.png);
                                   width:40px;
                                   height:40px;
                                  margin-top:0.5%;
                              }
                              QCheckBox::indicator:hover {
                                   width:38px;
                                   height:38px;
                                margin-top:0.5%;
                              }
                        """)
        self.VisualizationCheckbox.setObjectName("VisualizationCheckbox")
        self.AnomalyCheckbox = QtWidgets.QCheckBox(self.frame_2)
        self.AnomalyCheckbox.setGeometry(QtCore.QRect(440, 340, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.AnomalyCheckbox.setFont(font)
        self.AnomalyCheckbox.setAutoFillBackground(False)
        self.AnomalyCheckbox.setStyleSheet("""
                                QCheckBox{
                                color:white;
                                }
                              QCheckBox::indicator:unchecked {
                               image: url( OffSwitch.png);
                                   width:40px;
                                   height:40px;
                                   margin-top:1%;
                              }
                               QCheckBox::indicator:checked {
                               image: url( OnSwitch.png);
                                   width:40px;
                                   height:40px;
                                    margin-top:1%;
                              }
                           QCheckBox::indicator:hover {
                                   width:38px;
                                   height:38px;
                                   margin-top:1%;
                              }
                        """)
        self.AnomalyCheckbox.setObjectName("AnomalyCheckbox")
        self.ClassificationCheckbox = QtWidgets.QCheckBox(self.frame_2)
        self.ClassificationCheckbox.setGeometry(QtCore.QRect(730, 340, 166, 22))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.ClassificationCheckbox.setFont(font)
        self.ClassificationCheckbox.setAutoFillBackground(False)
        self.ClassificationCheckbox.setStyleSheet("""
                                QCheckBox{
                                color:white;
                                }
                              QCheckBox::indicator:unchecked {
                               image: url( OffSwitch.png);
                                   width:40px;
                                   height:40px;
                                       margin-top:0.5%;
                              }
                               QCheckBox::indicator:checked {
                               image: url( OnSwitch.png);
                                   width:40px;
                                   height:40px;
                                        margin-top:0.5%;
                              }
                                     QCheckBox::indicator:hover {
                                   width:38px;
                                   height:38px;
                                        margin-top:0.5%;
                              }
                        """)
        self.ClassificationCheckbox.setObjectName("ClassificationCheckbox")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setGeometry(QtCore.QRect(870, 530, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setStyleSheet(
            ("""
                QPushButton {
                   background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #B543EE , stop: 1 #E14ECA);
                   border-width: 6px;
                   border-radius: 10px;
                   color:  rgb(225,255, 255);
                    font-size: 15px;
                     font-weight: bold;
                }
                QPushButton:hover {
                border-width: 6px;
                   border-radius: 10px;
                   color:  rgb(225,255, 255);
                    background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #D299DB , stop: 1 #E4C4E9);                  
                     border: 1px solid #1E1E2F;
                       font-size: 15px;
                     font-weight: bold;
                }
            """))
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout_7.addWidget(self.frame_2)
        self.stackedWidget.addWidget(self.page_1)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frame_3 = QtWidgets.QFrame(self.page_2)
        self.frame_3.setStyleSheet("background-color: rgb(30, 30, 47);\n"
                                   "color: rgb(255, 255, 255);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.SensorsLabel = QtWidgets.QLabel(self.frame_3)
        self.SensorsLabel.setGeometry(QtCore.QRect(155, 120, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.SensorsLabel.setFont(font)
        self.SensorsLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.SensorsLabel.setObjectName("SensorsLabel")
        self.ServicesLabel = QtWidgets.QLabel(self.frame_3)
        self.ServicesLabel.setGeometry(QtCore.QRect(650, 120, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.ServicesLabel.setFont(font)
        self.ServicesLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.ServicesLabel.setObjectName("ServicesLabel")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setGeometry(QtCore.QRect(870, 530, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet(
            ("""
                QPushButton {
                   background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #B543EE , stop: 1 #E14ECA);
                   border-width: 6px;
                   border-radius: 10px;
                   color:  rgb(225,255, 255);
                     font-size: 15px;
                     font-weight: bold;
                }
                QPushButton:hover {
                border-width: 6px;
                   border-radius: 10px;
                   color:  rgb(225,255, 255);
                   background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #D299DB , stop: 1 #E4C4E9);
                    border: 1px solid #1E1E2F;
                     font-size: 15px;
                     font-weight: bold;
                }
            """))
        self.pushButton_3.setObjectName("pushButton_3")
        self.ActuateButton = QtWidgets.QLabel(self.frame_3)
        self.ActuateButton.setGeometry(QtCore.QRect(560, 210, 141, 100))
        self.ActuateButton.setBaseSize(QtCore.QSize(0, 0))
        self.ActuateButton.setText("")
        self.ActuateButton.setStyleSheet(("""QLabel {
                            		   image: url( actuate.png);
                                            }
                                        QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }
                                        """))
        self.ActuateButton.setScaledContents(True)
        self.ActuateButton.setAlignment(QtCore.Qt.AlignCenter)
        self.ActuateButton.setObjectName("ActuateButton")
        self.BackLabel = QtWidgets.QLabel(self.frame_3)
        self.BackLabel.setGeometry(QtCore.QRect(10, 20, 51, 51))
        self.BackLabel.setBaseSize(QtCore.QSize(0, 0))
        self.BackLabel.setStyleSheet("")
        self.BackLabel.setText("")
        self.BackLabel.setStyleSheet(("""QLabel {
                            		   image: url( left-round-128.png);
                                            }
                                        QLabel:hover{
                                              border: 3px solid #1E1E2F
                                              }
                                        """))
        self.BackLabel.setScaledContents(True)
        self.BackLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.BackLabel.setObjectName("BackLabel")
        self.stackedWidget_2 = QtWidgets.QStackedWidget(self.frame_3)
        self.stackedWidget_2.setGeometry(QtCore.QRect(30, 190, 481, 381))
        self.stackedWidget_2.setObjectName("stackedWidget_2")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.page)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 461, 81))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.SensorsLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.SensorsLayout.setContentsMargins(0, 0, 0, 0)
        self.SensorsLayout.setObjectName("SensorsLayout")
        self.SensorsComboBox = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.SensorsComboBox.setMaximumSize(QtCore.QSize(16777215, 80))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.SensorsComboBox.setFont(font)
        self.SensorsComboBox.setObjectName("SensorsComboBox")
        self.SensorsComboBox.setStyleSheet(
            ("""
                        QComboBox {
                        border: 1px solid #FF4ECA;
                        border-radius:2px
                        }
                    """))
        self.SensorsComboBox.addItem("")
        self.SensorsComboBox.addItem("")
        self.SensorsComboBox.addItem("")
        self.SensorsComboBox.addItem("")
        self.SensorsComboBox.addItem("")
        self.SensorsLayout.addWidget(self.SensorsComboBox)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.SensorsAddButton = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.SensorsAddButton.setMaximumSize(QtCore.QSize(479, 33))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.SensorsAddButton.setFont(font)
        #         self.SensorsAddButton.setStyleSheet("background-color: rgb(225, 78, 202);\n"
        # "border-width: 6px;\n"
        # "border-radius: 10px;\n"
        # "height:100px;\n"
        # "margin-top:5%;\n"
        # "")
        self.SensorsAddButton.setStyleSheet(
            ("""
                       QPushButton {
                          border-width: 6px;
                          border-radius: 10px;
                          margin-top:5%;
                          height:100px;
                          color:  rgb(225,255, 255);
                          background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #B543EE , stop: 1 #E14ECA);
                          font-size: 15px;
                          font-weight: bold;


                       }
                       QPushButton:hover {
                       border-width: 6px;
                       margin-top:5%;
                       height:100px;
                        border-radius: 10px;
                        color:  rgb(225,255, 255);
                       background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #D299DB , stop: 1 #E4C4E9);
                       border: 1px solid #1E1E2F
                        font-size: 15px;
                        font-weight: bold;
                       }
                   """))
        self.SensorsAddButton.setObjectName("SensorsAddButton")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.SensorsAddButton)
        self.textEdit = QtWidgets.QTextEdit(self.verticalLayoutWidget)
        self.textEdit.setMaximumSize(QtCore.QSize(300, 30))
        self.textEdit.setStyleSheet(
            ("""
                QTextEdit {
                   background-color: rgb(225,255, 255);
                   color:  black;
                   font-weight:bold;
                    font-size:15px
                }
            """))
        self.textEdit.setObjectName("textEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.textEdit)
        self.SensorsLayout.addLayout(self.formLayout)
        self.SensorsScrollArea = QtWidgets.QScrollArea(self.page)

        self.SensorsScrollArea.setStyleSheet(
            ("""
                        QScrollArea {
                        border: 1px solid #FF4ECA;
                        border-radius:2px
                        }
                    """))
        self.SensorsScrollArea.setGeometry(QtCore.QRect(9, 86, 461, 291))
        self.SensorsScrollArea.setWidgetResizable(True)
        self.SensorsScrollArea.setObjectName("SensorsScrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 459, 289))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.SensorsList = QtWidgets.QVBoxLayout()
        self.SensorsList.setContentsMargins(0,0,0,250)
        #
        # self.V_splitter = QtWidgets.QSplitter(QtCore.Qt.Orientation.Vertical)
        # self.SensorsList.addWidget(self.V_splitter)
        # self.list_splitter = QtWidgets.QSplitter(QtCore.Qt.Orientation.Vertical)
        # self.SensorsList.addWidget(self.list_splitter)

        self.SensorsList.setObjectName("SensorsList")
        self.verticalLayout_9.addLayout(self.SensorsList)
        self.SensorsScrollArea.setWidget(self.scrollAreaWidgetContents)
        self.stackedWidget_2.addWidget(self.page)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.pushButton_4 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_4.setGeometry(QtCore.QRect(130, 20, 141, 141))
        self.pushButton_4.setStyleSheet(("""QPushButton {
               		   image: url( addsign.png);
               		   padding:10px;
               		   margin:5px;
               		   border-radius: 62px;
               		   border: 5px solid #FFFFFF;
                               }
                               QPushButton:hover {
                	           image: url( addsign.png);
               		   padding:10px;
               		   margin:5px;
               		   border-radius: 62px;
               		   border: 5px solid #FFFFFF;
               	       background-color: qlineargradient(x1: 0, x2: 1, stop: 0 #D299DB , stop: 1 #E4C4E9);
                               }
                           """))
        self.pushButton_4.setText("")
        self.pushButton_4.setObjectName("pushButton_4")
        self.stackedWidget_2.addWidget(self.page_4)
        self.GPSButton = QtWidgets.QLabel(self.frame_3)
        self.GPSButton.setGeometry(QtCore.QRect(690, 360, 141, 100))
        self.GPSButton.setBaseSize(QtCore.QSize(0, 0))
        self.GPSButton.setText("")

        self.GPSButton.setScaledContents(True)
        self.GPSButton.setAlignment(QtCore.Qt.AlignCenter)
        self.GPSButton.setObjectName("GPSButton")
        self.GPSButton.setStyleSheet(("""QLabel {
                    		   image: url( gps.png);
                                    }
                                         QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }
                                """))

        self.StreamingButton = QtWidgets.QLabel(self.frame_3)
        self.StreamingButton.setGeometry(QtCore.QRect(840, 210, 141, 91))
        self.StreamingButton.setBaseSize(QtCore.QSize(0, 0))
        self.StreamingButton.setText("")
        self.StreamingButton.setStyleSheet(("""QLabel {
                            		   image: url( streaming.png);
                                            }
                                       QLabel:hover{
                                              border: 5px solid #1E1E2F
                                              }
                                        """))
        self.StreamingButton.setScaledContents(True)
        self.StreamingButton.setAlignment(QtCore.Qt.AlignCenter)
        self.StreamingButton.setObjectName("StreamingButton")
        self.ActuateLabel = QtWidgets.QLabel(self.frame_3)
        self.ActuateLabel.setGeometry(QtCore.QRect(560, 310, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ActuateLabel.setFont(font)
        self.ActuateLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.ActuateLabel.setObjectName("ActuateLabel")
        self.GPSLabel = QtWidgets.QLabel(self.frame_3)
        self.GPSLabel.setGeometry(QtCore.QRect(690, 460, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GPSLabel.setFont(font)
        self.GPSLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.GPSLabel.setObjectName("GPSLabel")
        self.StreamingLabel = QtWidgets.QLabel(self.frame_3)
        self.StreamingLabel.setGeometry(QtCore.QRect(840, 310, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Cascadia Code SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.StreamingLabel.setFont(font)
        self.StreamingLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.StreamingLabel.setObjectName("StreamingLabel")
        self.verticalLayout_6.addWidget(self.frame_3)
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.page_3)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.stackedWidget.addWidget(self.page_3)
        self.verticalLayout_5.addWidget(self.stackedWidget)
        self.horizontalLayout_2.addWidget(self.frame_pages)
        self.verticalLayout.addWidget(self.Content)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        self.stackedWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_7.setText(_translate("MainWindow", "AI Services"))
        self.VisualizationCheckbox.setText(_translate("MainWindow", "Visualization"))
        self.AnomalyCheckbox.setText(_translate("MainWindow", "Anomaly Detection"))
        self.ClassificationCheckbox.setText(_translate("MainWindow", "Classification"))
        self.pushButton_5.setText(_translate("MainWindow", "Next"))
        self.SensorsLabel.setText(_translate("MainWindow", "Sensors"))
        self.ServicesLabel.setText(_translate("MainWindow", "Services"))
        self.pushButton_3.setText(_translate("MainWindow", "Generate!"))
        self.SensorsComboBox.setItemText(0, _translate("MainWindow", "Speed"))
        self.SensorsComboBox.setItemText(1, _translate("MainWindow", "Temperature"))
        self.SensorsComboBox.setItemText(2, _translate("MainWindow", "Ultrasonic"))
        self.SensorsComboBox.setItemText(3, _translate("MainWindow", "Accelerometer"))
        self.SensorsComboBox.setItemText(4, _translate("MainWindow", "Others"))
        self.SensorsAddButton.setText(_translate("MainWindow", "Add Sensor"))
        self.ActuateLabel.setText(_translate("MainWindow", "Actuate"))
        self.GPSLabel.setText(_translate("MainWindow", "GPS"))
        self.StreamingLabel.setText(_translate("MainWindow", "RGB Camera"))

        self.textEdit.setHidden(True)
        self.SensorsAddButton.clicked.connect(self.addSensor)
        self.SensorsComboBox.currentTextChanged.connect(self.toggleTextEdit)

        # Button Events
        self.pushButton_4.clicked.connect(self.OnClickAddSensors)
        self.pushButton_5.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.page_2))
        self.BackLabel.mousePressEvent = self.GoBack
        self.GPSButton.mousePressEvent = self.GPS_click
        self.ActuateButton.mousePressEvent = self.Actuate_click
        self.StreamingButton.mousePressEvent = self.Streaming_click
        self.pushButton_3.clicked.connect(self.submit_click)

        self.gpsToggler = False
        self.actuateToggler = False
        self.cameraToggler = False

        self.Sensors_Dict = {}
        self.Sensors_Dict["Camera"] = False
        
        self.Sensors_Dict["Actuate"] = False
        self.Sensors_Dict["GPS"] = False


    # Selection and unselection for actuate options to add them in Sensors_Dict
    # Using togglers
    def GPS_click(self, event):
        if (not self.gpsToggler):
            self.gpsToggler = True
            self.GPSButton.setStyleSheet(self.GPSButton.styleSheet())
            self.GPSButton.setStyleSheet(("""QLabel {
                                           image: url(SelectedGps.png);
                                           }
                                             QLabel:hover{
                                                            border: 5px solid #1E1E2F;}
                                            """))

        else:
            self.gpsToggler = False
            self.GPSButton.setStyleSheet(self.GPSButton.styleSheet())
            self.GPSButton.setStyleSheet(("""QLabel {
                                                              image: url(gps.png);
                                                              }
                                              QLabel:hover{
                                              border: 5px solid #1E1E2F;
                                              }
                                                               """))
        self.Sensors_Dict["GPS"] = self.gpsToggler

    def Actuate_click(self, event):
        if (not self.actuateToggler):
            self.actuateToggler = True
            self.ActuateButton.setStyleSheet(self.ActuateButton.styleSheet())
            self.ActuateButton.setStyleSheet(("""QLabel {
                                              image: url( SelectedActuate.png);
                                              }
                                                QLabel:hover{
                                                            border: 5px solid #1E1E2F;}
                                               """))

        else:
            self.actuateToggler = False
            self.ActuateButton.setStyleSheet(self.ActuateButton.styleSheet())
            self.ActuateButton.setStyleSheet(("""QLabel {
                                                                 image: url(actuate.png);
                                                                 }
                                                                     QLabel:hover{
                                                            border: 5px solid #1E1E2F;}
                                                                  """))
        self.Sensors_Dict["Actuate"] = self.actuateToggler

    def Streaming_click(self, event):
        if (not self.cameraToggler):
            self.cameraToggler = True
            self.StreamingButton.setStyleSheet(self.StreamingButton.styleSheet())
            self.StreamingButton.setStyleSheet(("""QLabel {
                                              image: url( SelectedStreaming.png);
                                              }
                                                  QLabel:hover{
                                                            border: 5px solid #1E1E2F;}
                                               """))

        else:
            self.cameraToggler = False
            self.StreamingButton.setStyleSheet(self.StreamingButton.styleSheet())
            self.StreamingButton.setStyleSheet(("""QLabel {
                                                                 image: url(streaming.png);
                                                                 }
                                                        QLabel:hover{
                                                            border: 5px solid #1E1E2F;}
                                                                  """))
        self.Sensors_Dict["Camera"] = self.cameraToggler

    def OnClickAddSensors(self, event):
        self.stackedWidget_2.setCurrentIndex(0)

    def GoBack(self, event):
        self.stackedWidget.setCurrentIndex(0)

    def submit_click(self):

            # TODO: Map functionality of AI Services in the Dashboard
            self.Sensors_Dict["Visualization"] = self.VisualizationCheckbox.isChecked()
            self.Sensors_Dict["AnomalyDetection"] = self.AnomalyCheckbox.isChecked()
            self.Sensors_Dict["Classification"] = self.ClassificationCheckbox.isChecked()

            items = (self.SensorsList.itemAt(i) for i in range(self.SensorsList.count()))
            sensor_index = 0
            for sensorBtn in items:
                    self.Sensors_Dict[sensor_index] = sensorBtn.widget().text()
                    sensor_index += 1
            print(self.Sensors_Dict)
            self.Sensors_Dict["SensorsNum"] = sensor_index

            uiFunction.send_data(self.Sensors_Dict)


    def addSensor(self):
        if (self.SensorsComboBox.currentText() != "Others"):
            sensor_value = self.SensorsComboBox.currentText()
            self.createSensorButton(sensor_value)
        elif (self.textEdit.toPlainText() != ""):
            sensor_value = self.textEdit.toPlainText()
            self.createSensorButton(sensor_value)

    def createSensorButton(self, sensorName):
        sensor = QtWidgets.QPushButton()
        sensor.setStyleSheet(sensor.styleSheet())
        sensor.setStyleSheet("""
                                   QPushButton {
                                      background-color: rgb(225, 78, 202,0.1);
                                      border-width: 6px;
                                      border-radius: 5px;
                                      border:1px solid qlineargradient(x1: 0, x2: 1, stop: 0 #B543EE , stop: 1 #E14ECA);
                                      color:  rgb(225,255, 255);
                                      height:30px;
                                      padding:3px;
                                      font-weight:bold;
                                      font-size:15px
                                   }
                                   QPushButton:hover {
                                    image: url( deletesign.png);
                                      border-width: 6px;
                                      border-radius: 10px;
                                      color:  rgb(225,255, 255);
                                      background-color :rgb(230,18, 19,0.6);
                                      border:1px solid #1E1E2F;;
                                      height:30px;
                                      color: transparent;
                                      padding:3px;                                 
                                   }
             """)

        sensor.setText(sensorName)
        sensor.clicked.connect(lambda: self.removeSensorButton(sensor))
        # self.V_splitter.addWidget(sensor)
        self.SensorsList.addWidget(sensor)

    def toggleTextEdit(self):
        if (self.SensorsComboBox.currentText() != "Others"):
            self.textEdit.setHidden(True)
        else:
            self.textEdit.setHidden(False)

    def removeSensorButton(self, button):
        if button is not None:
            button.deleteLater()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())